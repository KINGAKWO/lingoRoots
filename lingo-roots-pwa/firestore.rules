rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own user document and admins can read/write any user document
    match /users/{userId} {
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Allow users to update their own info, admins can update any
    }

    // Rules for language content (e.g., modules, lessons, quizzes)
    // Assuming 'language-content' refers to collections like 'languages/{langId}/modules/{moduleId}' etc.
    match /languages/{langId}/{contentType}/{contentId} {
      // Learners can read any content
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'learner' ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'contentCreator' ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Content Creators can create/update content if they are the creator (e.g., check a 'createdBy' field)
      // or if it's new content they are creating under their ID (more complex, often handled by Cloud Functions for setting createdBy)
      // For simplicity here, we'll allow write if user is contentCreator or admin.
      // A more robust rule would check `resource.data.createdBy == request.auth.uid` for updates.
      allow write: if (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'contentCreator' && 
                      (request.resource.data.createdBy == request.auth.uid || !exists(/databases/$(database)/documents/languages/$(langId)/$(contentType)/$(contentId)))) ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Fallback for any other paths - only admins can access
    match /{document=**} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user role from Firestore (can be adapted for claims if needed)
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // User documents
    match /users/{userId} {
      // Users can read their own document.
      // Admins can read any user document.
      allow read: if request.auth.uid == userId || getUserRole(request.auth.uid) == 'admin';
      // Users can update their own document (e.g., displayName, preferences).
      // Admins can update any user document.
      // Role changes should ideally be handled by a Cloud Function with admin privileges.
      allow update: if request.auth.uid == userId || getUserRole(request.auth.uid) == 'admin';
      // User creation is handled by auth trigger or signup logic, not direct client write here usually.
      allow create: if request.auth.uid == userId; // Allow user to create their own doc on signup
      // Admins can delete users (consider soft delete)
      allow delete: if getUserRole(request.auth.uid) == 'admin';
    }

    // Language collections (e.g., /languages/duala/lessons/lesson1, /languages/duala/quizzes/quiz1)
    match /languages/{languageId}/{collection}/{documentId} {
      // Learners can read lessons and quizzes.
      allow read: if getUserRole(request.auth.uid) == 'learner' || 
                     getUserRole(request.auth.uid) == 'contentCreator' || 
                     getUserRole(request.auth.uid) == 'admin';
      
      // Content Creators can create, update, and delete content they own or if they are admin.
      // Assumes a 'createdBy' field in content documents.
      allow create: if getUserRole(request.auth.uid) == 'contentCreator' || getUserRole(request.auth.uid) == 'admin';
      allow update: if (getUserRole(request.auth.uid) == 'contentCreator' && resource.data.createdBy == request.auth.uid) || 
                       getUserRole(request.auth.uid) == 'admin';
      allow delete: if (getUserRole(request.auth.uid) == 'contentCreator' && resource.data.createdBy == request.auth.uid) || 
                       getUserRole(request.auth.uid) == 'admin';
    }

    // Admin-specific collections (e.g., /adminAnalytics, /siteConfiguration)
    match /adminOnly/{document=**} {
      allow read, write, delete: if getUserRole(request.auth.uid) == 'admin';
    }

    // Default deny for any other paths not explicitly matched
    match /{path=**} {
      allow read, write: if false;
    }
  }
}